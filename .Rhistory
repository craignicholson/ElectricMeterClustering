"09:30",
"09:45","10:00",
"10:15",
"10:30",
"10:45","11:00",
"11:15",
"11:30",
"11:45","12:00",
"12:15",
"12:30",
"12:45",
"13:00",
"13:15",
"13:30",
"13:45",
"14:00",
"14:15",
"14:30",
"14:45",
"15:00",
"15:15",
"15:30",
"15:45",
"16:00",
"16:15",
"16:30",
"16:45",
"17:00",
"17:15",
"17:30",
"17:45",
"18:00",
"18:15",
"18:30",
"18:45",
"19:00",
"19:15",
"19:30",
"19:45",
"20:00",
"20:15",
"20:30",
"20:45",
"21:00",
"21:15",
"21:30",
"21:45",
"22:00",
"22:15",
"22:30",
"22:45",
"23:00",
"23:15",
"23:30",
"23:45",
"00:00")
)
model_data_one <- subset(data, data$Location==4191826)
View(model_data_one)
data$h <- hour(data$dtReadDate)
model_data_one <- subset(data, data$Location==4191826)
View(model_data_one)
data$h <- hour(data$dtReadDate-minute(15))            #this needs to be rolled back by 15min to be correct
ggplot(model_data_one,aes(x = model_data_one$Readvalue)) +
geom_histogram(binwidth=0.05, color = 'black', fill = '#333333') +
ggtitle("Histogram of kWh for Location 4191826 (bin=0.05)")
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(~weekday, ncol=4)
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(dtReadDay ~ weekday, ncol=7) +
ggtitle(paste("Location ",model_data_one$Location, " | January 2018 Weeks "))
model_data_one <- model_data_one %>%
group_by(hhmm, LocationNumber, MeterIdentifier, Uom)  %>%
summarise(mean = mean(Readvalue),
median = median(as.numeric(Readvalue)),
min = min(Readvalue),
max = max(Readvalue),
total = sum(Readvalue),
std = sd(Readvalue),
n = n())  %>%
arrange(hhsmm, LocationNumber, MeterIdentifier, Uom)
model_data_one <- model_data_one %>%
group_by(hhmm, LocationNumber, MeterIdentifier, Uom)  %>%
summarise(mean = mean(Readvalue),
median = median(as.numeric(Readvalue)),
min = min(Readvalue),
max = max(Readvalue),
total = sum(Readvalue),
std = sd(Readvalue),
n = n())  %>%
arrange(hhmm, LocationNumber, MeterIdentifier, Uom)
View(model_data_one)
ggplot(newdata_mean, aes(x=hhmm, y=mean)) +
geom_point(size=2, shape=23)
ggplot(model_data_one, aes(x=hhmm, y=mean)) +
geom_point(size=2, shape=23)
ggplot(model_data_one, aes(x=hhmm, y=log(mean))) +
geom_point(size=2, shape=23)
# Scaled Value Tests to see if plots change much
model_data_one$scaled_value_max <- model_data_one$ReadValue/max(model_data$ReadValue)
# Scaled Value Tests to see if plots change much
model_data_one$scaled_value_max <- model_data_one$mean/max(model_data$ReadValue)
model_data_one <- subset(data, data$Location==4191826)
model_data_one$mean <- mean(ReadValue)
model_data_one <- subset(data, data$Location==4191826)
model_data_one$mean <- mean(model_data_one$ReadValue)
model_data_one$sd <- sd(model_data_one$ReadValue)
model_data_one$mean <- mean(model_data_one$ReadValue)
model_data_one <- subset(data, data$Location==4191826)
model_data_one$mean <- mean(model_data_one$Readvalue)
model_data_one$sd <- sd(model_data_one$Readvalue)
View(model_data_one)
model_data_one <- subset(data, data$Location==4191826)
model_data_one$mean <- mean(model_data_one$Readvalue)
model_data_one$max <- max(model_data_one$Readvalue)
model_data_one$sd <- sd(model_data_one$Readvalue)
View(model_data_one)
model_data_one <- subset(data, data$Location==4191826)
model_data_one$min <- min(model_data_one$Readvalue)
model_data_one$mean <- mean(model_data_one$Readvalue)
model_data_one$median <- median(model_data_one$Readvalue)
model_data_one$max <- max(model_data_one$Readvalue)
model_data_one$sd <- sd(model_data_one$Readvalue)
View(model_data_one)
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point()
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point()
ggplot(model_data_one, aes(x=hhmm, y=Readvalue/max)) +
geom_point()
ggplot(model_data_one, aes(x=hhmm, y=Readvalue/sd)) +
geom_point()
ggplot(model_data_one, aes(x=hhmm, y=Readvalue/max)) +
geom_point() +
theme(axis.text.x = element_text(angle = -90, hjust = 0))
model_data_one_mean <- model_data_one %>%
group_by(hhmm, LocationNumber, MeterIdentifier, Uom)  %>%
summarise(mean = mean(Readvalue),
median = median(as.numeric(Readvalue)),
min = min(Readvalue),
max = max(Readvalue),
total = sum(Readvalue),
std = sd(Readvalue),
n = n())  %>%
arrange(hhmm, LocationNumber, MeterIdentifier, Uom)
View(model_data_one_mean)
ggplot(model_data_one, aes(x=hhmm, y=mean)) +
geom_point(size=2, shape=23)
ggplot(model_data_one_mean, aes(x=hhmm, y=mean)) +
geom_point(size=2, shape=23)
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(dtReadDay ~ weekday, ncol=7) +
ggtitle(paste("Location ",model_data_one$Location, " | January 2018 Weeks ")) +
theme(axis.text.x = element_text(angle = -90, hjust = 0))
ggplot(model_data_one_mean, aes(x=hhmm, y=mean)) +
geom_point(size=2, shape=23)  +
theme(axis.text.x = element_text(angle = -90, hjust = 0))
ggplot(model_data_one, aes(x=hhmm, y=log(mean))) +
geom_point(size=2, shape=23) +
theme(axis.text.x = element_text(angle = -90, hjust = 0))
ggplot(model_data_one_mean, aes(x=hhmm, y=log(mean))) +
geom_point(size=2, shape=23) +
theme(axis.text.x = element_text(angle = -90, hjust = 0))
# Scaled Value Tests to see if plots change much
model_data_one$scaled_value_max <- model_data_one$mean/max(model_data_one$ReadValue)
model_data_one$scaled_value_sd <- model_data_one$mean/sd(model_data_one$ReadValue)
# Scaled Value Tests to see if plots change much
model_data_one_mean$scaled_value_max <- model_data_one_mean$mean/max(model_data_one_mean$mean)
model_data_one_mean$scaled_value_sd <- model_data_one_mean$mean/sd(model_data_one_mean$mean)
ggplot(model_data_one_mean, aes(x=hhmm, y=scaled_value_max)) +
geom_point(size=2, shape=23)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
#data <- read.csv(file="C:/Users/craig/source/repos/rcode/duck_river_rate_study/2018.01.csv", header=TRUE, sep=",")
data <- read_csv(readr_example("C:/Users/craig/source/repos/rcode/duck_river_rate_study/2018.01.zip"))
#data <- read.csv(file="C:/Users/craig/source/repos/rcode/duck_river_rate_study/2018.01.csv", header=TRUE, sep=",")
data <- read_csv("C:/Users/craig/source/repos/rcode/duck_river_rate_study/2018.01.zip")
#data <- read.csv(file="C:/Users/craig/source/repos/rcode/duck_river_rate_study/2018.01.csv", header=TRUE, sep=",")
data <- read_csv("C:/Users/craig/source/repos/rcode/duck_river_rate_study/2018.01.csv")
# fxnInterval_from_datetime numbers the date with a interger as ending intervals
fxnInterval_from_datetime <- function(dt) {
#TODO: make this a parameter
divisor = 15
interval = 96
h = hour(dt)
m = minute(dt)
interval = ( (h * 60) / divisor ) + ( m / divisor )
if (interval == 0) {
interval = 96
}
return(interval)
}
# TODO: Would be nice to have something to return HHMM and make factors
# This will be easy to read for users and if we factor them or index it
# will plot correctly.  Might run faster too.
fxn_hour_minute <- function(dt) {
dt <- format(as.POSIXct(dt,
format="%Y-%m-%d %H:%M"),
format="%H:%M")
return (dt)
}
str(data)
library(tidyverse)
#library(lubridate)
#data$dtReadDate <- parse_date_time(data$i.ReadDate, orders="ymd HMS")
#data$dtReadDay <- parse_date_time(data$h.ReadDate, orders="ymd HMS")
data$month <- month(data$h.ReadDate)
data$week <- week(data$h.ReadDate)
data$weekday  <- wday(data$h.ReadDate, label = TRUE)
data$h <- hour(data$dtReadDate)            #this needs to be rolled back by 15min to be correct
data$h <- hour(data$h.ReadDate)            #this needs to be rolled back by 15min to be correct
data$hhmm <- fxn_hour_minute(data$h.ReadDate)
data$hhmm <- factor(data$hhmm, levels = c("00:15","00:30","00:45","01:00",
"01:15","01:30","01:45","02:00",
"02:15","02:30","02:45","03:00",
"03:15","03:30","03:45","04:00",
"04:15",
"04:30",
"04:45","05:00",
"05:15",
"05:30",
"05:45","06:00",
"06:15",
"06:30",
"06:45","07:00",
"07:15",
"07:30",
"07:45","08:00",
"08:15",
"08:30",
"08:45","09:00",
"09:15",
"09:30",
"09:45","10:00",
"10:15",
"10:30",
"10:45","11:00",
"11:15",
"11:30",
"11:45","12:00",
"12:15",
"12:30",
"12:45","13:00",
"13:15",
"13:30",
"13:45","14:00",
"14:15",
"14:30",
"14:45","15:00",
"15:15",
"15:30",
"15:45","16:00",
"16:15",
"16:30",
"16:45","17:00",
"17:15",
"17:30",
"17:45","18:00",
"18:15",
"18:30",
"18:45","19:00",
"19:15",
"19:30",
"19:45","20:00",
"20:15",
"20:30",
"20:45", "21:00",
"21:15",
"21:30",
"21:45","22:00",
"22:15",
"22:30",
"22:45", "23:00",
"23:15",
"23:30",
"23:45", "00:00")
)
test <- subset(data, data$h.ReadDate < as.POSIXct("2018-01-01"))
View(test)
test <- subset(data, data$h.ReadDate < as.POSIXct("2018-01-01") && data$LocationNumber == 4191826)
test <- subset(data, data$h.ReadDate < as.POSIXct("2018-01-01") & data$LocationNumber == 4191826)
View(test)
View(test)
data$h <- hour(data$i.ReadDate)            #this needs to be rolled back by 15min to be correct
data$hhmm <- fxn_hour_minute(data$i.ReadDate)
test <- subset(data, data$h.ReadDate < as.POSIXct("2018-01-01") & data$LocationNumber == 4191826)
View(test)
data$isWeekDay <- isWeekday(df1$data$h.ReadDate, wday=1:5)
data$isWeekDay <- isWeekday(data$h.ReadDate, wday=1:5)
weekdays1 <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri')
data$isWeekDay <- factor((weekdays(df1$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
weekdays1 <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri')
data$isWeekDay <- factor((weekdays(data$h.ReadDate) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
weekdays1 <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri')
test$isWeekDay <- factor((weekdays(test$h.ReadDate) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
View(test)
test$isWeekDay <- weekdays(test$h.ReadDate)
View(test)
test$isWeekDay <- weekdays(test$h.ReadDate, abbreviate())
test$isWeekDay <- weekdays(test$h.ReadDate, abbreviate = TRUE )
View(test)
#test$isWeekDay <- weekdays(test$h.ReadDate, abbreviate = TRUE )
weekdays1 <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri')
test$isWeekDay <- factor((weekdays(test$h.ReadDate, abbreviate = TRUE )
%in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
View(test)
#test$isWeekDay <- weekdays(test$h.ReadDate, abbreviate = TRUE )
weekdays1 <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri')
data$isWeekDay <- factor((weekdays(data$h.ReadDate, abbreviate = TRUE )
%in% weekdays1),
levels=c(FALSE, TRUE), labels=c('Weekend', 'Weekday'))
data$hhmm <- factor(data$hhmm, levels = c("00:15","00:30","00:45","01:00",
"01:15","01:30","01:45","02:00",
"02:15","02:30","02:45","03:00",
"03:15","03:30","03:45","04:00",
"04:15","04:30","04:45","05:00",
"05:15","05:30","05:45","06:00",
"06:15","06:30","06:45","07:00",
"07:15","07:30","07:45","08:00",
"08:15","08:30","08:45","09:00",
"09:15","09:30","09:45","10:00",
"10:15","10:30","10:45","11:00",
"11:15","11:30","11:45","12:00",
"12:15","12:30","12:45","13:00",
"13:15","13:30","13:45","14:00",
"14:15","14:30","14:45","15:00",
"15:15","15:30","15:45","16:00",
"16:15","16:30","16:45","17:00",
"17:15","17:30","17:45","18:00",
"18:15","18:30","18:45","19:00",
"19:15",
"19:30",
"19:45","20:00",
"20:15",
"20:30",
"20:45", "21:00",
"21:15",
"21:30",
"21:45","22:00",
"22:15",
"22:30",
"22:45", "23:00",
"23:15",
"23:30",
"23:45", "00:00")
)
test <- subset(data, data$h.ReadDate < as.POSIXct("2018-01-01") & data$LocationNumber == 4191826)
model_data_one <- subset(data, data$Location==4191826)
model_data_one$min <- min(model_data_one$Readvalue)
model_data_one <- subset(data, data$LocationNumber==4191826)
model_data_one$min <- min(model_data_one$Readvalue)
model_data_one$mean <- mean(model_data_one$Readvalue)
model_data_one$median <- median(model_data_one$Readvalue)
model_data_one$max <- max(model_data_one$Readvalue)
model_data_one$sd <- sd(model_data_one$Readvalue)
ggplot(model_data_one,aes(x = model_data_one$Readvalue)) +
geom_histogram(binwidth=0.05, color = 'black', fill = '#333333') +
ggtitle("Histogram of kWh for Location 4191826 (bin=0.05)")
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(~weekday, ncol=4)
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(~weekday, ncol=7)
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(~weekday, ncol=7) +
xlab("Time") +
ylab("kWh") +
ggtitle("Load Shapes for the month of January 2018 by Day of Week") +
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(~weekday, ncol=7) +
xlab("Time") +
ylab("kWh") +
ggtitle("Load Shapes for the month of January 2018 by Day of Week")
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(dtReadDay ~ weekday, ncol=7) +
xlab("Time") +
ylab("kWh") +
theme(axis.text.x = element_text(angle = -90, hjust = 0))  +
ggtitle(paste("Location ",model_data_one$Location, " | January 2018 Weeks "))
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(dtReadDay ~ weekday, ncol=7) +
xlab("Time") +
ylab("kWh") +
theme(axis.text.x = element_text(angle = -90, hjust = 0))  +
ggtitle(paste("Location ",model_data_one$LocationNumber, " | January 2018 Weeks "))
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(h.ReadDate ~ weekday, ncol=7) +
xlab("Time") +
ylab("kWh") +
theme(axis.text.x = element_text(angle = -90, hjust = 0))  +
ggtitle(paste("Location ",model_data_one$LocationNumber, " | January 2018 Weeks "))
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(h.ReadDate ~ weekday, ncol=7) +
theme(axis.title.x="Time",
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(h.ReadDate ~ weekday, ncol=7) +
theme(axis.title.x="Time",
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("kWh") +
theme(axis.text.x = element_text(angle = -90, hjust = 0))  +
ggtitle(paste("Location ",model_data_one$LocationNumber, " | January 2018 Weeks "))
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(h.ReadDate ~ weekday, ncol=7) +
theme(axis.title.x= element_text("Time"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("kWh") +
theme(axis.text.x = element_text(angle = -90, hjust = 0))  +
ggtitle(paste("Location ",model_data_one$LocationNumber, " | January 2018 Weeks "))
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(h.ReadDate ~ weekday, ncol=7) +
theme(axis.title.x= element_text("Time"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("kWh") +
#theme(axis.text.x = element_text(angle = -90, hjust = 0))  +
ggtitle(paste("Location ",model_data_one$LocationNumber, " | January 2018 Weeks "))
ggplot(model_data_one, aes(x=hhmm, y=Readvalue)) +
geom_point(size=2, shape=23) +
facet_wrap(h.ReadDate ~ weekday, ncol=7) +
theme(axis.title.x= element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("kWh") +
xlab("Time") +
#theme(axis.text.x = element_text(angle = -90, hjust = 0))  +
ggtitle(paste("Location ",model_data_one$LocationNumber, " | January 2018 Weeks "))
install.packages("kernlab")
data$hhmm <- factor(data$hhmm, levels = c("00:15","00:30","00:45","01:00",
"01:15","01:30","01:45","02:00",
"02:15","02:30","02:45","03:00",
"03:15","03:30","03:45","04:00",
"04:15","04:30","04:45","05:00",
"05:15","05:30","05:45","06:00",
"06:15","06:30","06:45","07:00",
"07:15","07:30","07:45","08:00",
"08:15","08:30","08:45","09:00",
"09:15","09:30","09:45","10:00",
"10:15","10:30","10:45","11:00",
"11:15","11:30","11:45","12:00",
"12:15","12:30","12:45","13:00",
"13:15","13:30","13:45","14:00",
"14:15","14:30","14:45","15:00",
"15:15","15:30","15:45","16:00",
"16:15","16:30","16:45","17:00",
"17:15","17:30","17:45","18:00",
"18:15","18:30","18:45","19:00",
"19:15","19:30","19:45","20:00",
"20:15","20:30","20:45","21:00",
"21:15","21:30","21:45","22:00",
"22:15","22:30","22:45","23:00",
"23:15","23:30","23:45","00:00")
,ordered = TRUE)
ggplot(model_data_one,aes(x = model_data_one$Readvalue)) +
geom_histogram(binwidth=0.05, color = 'black', fill = '#333333') +
ggtitle("Histogram of kWh for Location 4191826 (bin=0.05)")
h1 <- ggplot(model_data_one,aes(x = model_data_one$Readvalue)) +
geom_histogram(binwidth=0.05, color = 'black', fill = '#333333') +
ggtitle("Histogram of kWh for Location 4191826 (bin=0.05)")
h2 <- h1 + scale_x_log10(())
h2 <- h1 + scale_x_log10()
h1
h2
h2 <- h1 + scale_x_log10()
h2 <- h1 + scale_x_sqrt()
h2 <- h1 + scale_x_log10()
h3 <- h1 + scale_x_sqrt()
grid.arrange(h1,h2,h3)
(h1,h2,h3)
h1
h2
h3
h1
h2 + xlab("scale_x_log10")
h3 + xlab("scale_x_sqrt")
ggplot(data = data, aes(x = hhmm, y = Readvalue)) +
geom_point(position_jitter(w=0.3,h=0), alpha= 1/5)
ggplot(data = test, aes(x = hhmm, y = Readvalue)) +
geom_point(position_jitter(w=0.3,h=0), alpha= 1/5)
View(model_data_one)
View(test)
ggplot(data = test, aes(x = h, y = Readvalue)) +
geom_point(position_jitter(w=0.3,h=0), alpha= 1/5)
ggplot(data = data, aes(x = data$hhmm, y = data$Readvalue)) +
geom_point(position_jitter(w=0.3,h=0), alpha= 1/5)
ggplot(data = data, aes(x = data$hhmm, y = data$Readvalue)) +
geom_point(position_jitter, alpha= 1/5)
ggplot(data, aes(x = data$hhmm, y = data$Readvalue)) +
geom_point(position_jitter(w=0.3,h=0), alpha= 1/5)
ggplot(data, aes(x = data$hhmm, y = data$Readvalue)) +
geom_point(position=position_jitter(w=0.3,h=0), alpha= 1/5)
